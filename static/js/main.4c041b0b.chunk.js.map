{"version":3,"sources":["modules/grid/types.ts","modules/grid/actions.ts","utils/check-grid/index.ts","utils/create-full-grid/index.ts","utils/fill-grid/index.ts","utils/identify-square/index.ts","utils/is-in/col/index.ts","utils/is-in/row/index.ts","utils/is-in/square/index.ts","utils/normalize-grid/index.ts","utils/shuffle/index.ts","utils/solve-grid/index.ts","modules/grid/reducer.ts","modules/grid/index.ts","components/grid/block/styles/index.ts","components/grid/block/index.tsx","components/grid/styles/index.ts","components/grid/index.tsx","components/styles/card/index.ts","components/styles/content/index.ts","components/styles/title/index.ts","modules/index.ts","core/configure-store/index.ts","core/service-worker/index.ts","styles/global.ts","index.tsx","styles/theme.ts"],"names":["CREATE_FULL_GRID","SELECT_BLOCK","createFullGrid","type","types","selectBlock","coords","checkGrid","grid","i","j","fillGrid","numbers","row","col","Math","floor","shuffle","value","isInRow","isInCol","square","identifySquare","isInSquare","identifyWorkingSquare","x","push","includes","normalizeGrid","normalizedGrid","forEach","rowIndex","colIndex","array","length","random","solveGrid","initialState","undefined","reducer","state","action","selectedBlock","Container","styled","div","active","theme","css","colors","gridBlockActive","gridBlock","transition","gridBlockHover","Block","useSelector","isActive","dispatch","useDispatch","data-cy","onClick","Row","Grid","create","useCallback","useMousetrap","useEffect","Children","toArray","Array","map","_","Card","card","Content","Title","h1","combineReducers","configureStore","createStore","devToolsEnhancer","Boolean","window","location","hostname","match","createGlobalStyle","background","font","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c041b0b.chunk.js","sourcesContent":["export const CREATE_FULL_GRID = 'CREATE_FULL_GRID'\r\nexport const SELECT_BLOCK = 'SELECT_BLOCK'\r\n","import { Action, AnyAction } from 'redux'\r\n\r\nimport * as types from './types'\r\nimport { BLOCK_COORDS } from 'typings'\r\n\r\nexport const createFullGrid = (): Action => ({ type: types.CREATE_FULL_GRID })\r\n\r\nexport const selectBlock = (coords: BLOCK_COORDS): AnyAction => ({\r\n  coords,\r\n  type: types.SELECT_BLOCK,\r\n})\r\n","import { GRID } from '../../typings'\r\n\r\n/**\r\n * A function to check if the grid is full\r\n * @param grid A 9X9 array consisting of values from 0-9\r\n */\r\nfunction checkGrid(grid: GRID): boolean {\r\n  for (let i = 0; i < 9; i++)\r\n    for (let j = 0; j < 9; j++) if (grid[i][j] === 0) return false\r\n\r\n  return true\r\n}\r\n\r\nexport default checkGrid\r\n","import { GRID } from '../../typings'\r\nimport { fillGrid } from '..'\r\n\r\n/**\r\n * A function to create a full valid sudoku grid\r\n */\r\nfunction createFullGrid(): GRID {\r\n  const grid: GRID = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ]\r\n\r\n  fillGrid(grid)\r\n\r\n  return grid\r\n}\r\n\r\nexport default createFullGrid\r\n","import { GRID, NUMBERS } from 'typings'\r\nimport {\r\n  checkGrid,\r\n  identifySquare,\r\n  shuffle,\r\n  isInCol,\r\n  isInRow,\r\n  isInSquare,\r\n} from 'utils'\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\n/**\r\n * A backtracking/recusrive function to check all possible combinations of numbers until a solution is found\r\n * @param grid 9X9 Sudoku Grid\r\n */\r\nfunction fillGrid(grid: GRID) {\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      shuffle(numbers)\r\n\r\n      for (let value of numbers) {\r\n        if (!isInRow({ grid, row, value }))\r\n          if (!isInCol({ col, grid, value })) {\r\n            const square = identifySquare({ grid, row, col })\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value\r\n              if (checkGrid(grid)) return true\r\n              else if (fillGrid(grid)) return true\r\n            }\r\n          }\r\n      }\r\n\r\n      break\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default fillGrid\r\n","import { GRID, SQUARE } from 'typings'\r\n\r\ninterface IInput {\r\n  grid: GRID\r\n  row: number\r\n  col: number\r\n}\r\n\r\n/**\r\n * A function that identifies and returns the current square of a given sudoku grid at a row and column index.\r\n * @param input Object with 9X9 Sudoku Grid, row index and col index.\r\n */\r\nfunction identifyWorkingSquare({ col, grid, row }: IInput): SQUARE {\r\n  const square = []\r\n  if (row < 3) {\r\n    if (col < 3)\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  } else if (row < 6) {\r\n    if (col < 3)\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  } else {\r\n    if (col < 3)\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  }\r\n\r\n  return square as SQUARE\r\n}\r\n\r\nexport default identifyWorkingSquare\r\n","import { GRID, NUMBERS } from 'typings'\r\n\r\ninterface IInput {\r\n  col: number\r\n  grid: GRID\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid column.\r\n * @param input Object with 9X9 Sudoku Grid, col index and value.\r\n */\r\nfunction isInCol({ col, grid, value }: IInput): boolean {\r\n  for (let i = 0; i < 9; i++) if (value === grid[i][col]) return true\r\n  return false\r\n}\r\n\r\nexport default isInCol\r\n","import { GRID, NUMBERS } from 'typings'\r\n\r\ninterface IInput {\r\n  grid: GRID\r\n  row: number\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid row.\r\n * @param input Object with 9X9 Sudoku Grid, row index and value.\r\n */\r\nfunction isInRow({ grid, row, value }: IInput): boolean {\r\n  return grid[row].includes(value)\r\n}\r\n\r\nexport default isInRow\r\n","import { NUMBERS, SQUARE } from 'typings'\r\n\r\ninterface IInput {\r\n  square: SQUARE\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid square.\r\n * @param input Object with 3X3 Square and value.\r\n */\r\nfunction isInSquare({ square, value }: IInput): boolean {\r\n  return [...square[0], ...square[1], ...square[2]].includes(value)\r\n}\r\n\r\nexport default isInSquare\r\n","import { GRID, NORMALIZED_GRID } from 'typings'\r\n\r\nfunction normalizeGrid(grid: GRID): NORMALIZED_GRID {\r\n  const normalizedGrid: NORMALIZED_GRID = {}\r\n\r\n  grid.forEach((row, rowIndex) =>\r\n    row.forEach((col, colIndex) => {\r\n      if (colIndex === 0) normalizedGrid[rowIndex] = {}\r\n      normalizedGrid[rowIndex][colIndex] = col\r\n    })\r\n  )\r\n\r\n  return normalizedGrid\r\n}\r\n\r\nexport default normalizeGrid\r\n","/**\r\n * An array shuffling function using the Fisher-Yates shuffle algorithm\r\n * @param array An array that you want shuffled\r\n */\r\nfunction shuffle(array: any[]) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1))\r\n    ;[array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n}\r\n\r\nexport default shuffle\r\n","import { GRID, NUMBERS } from 'typings'\r\nimport { checkGrid, identifySquare, isInCol, isInRow, isInSquare } from 'utils'\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\n/**\r\n * A backtracking/recusrive function to check all possible combinations of numbers until a solution is found\r\n * @param grid A 9X9 array consisting of values from 0-9\r\n */\r\nfunction solveGrid(grid: GRID) {\r\n  let counter = 0\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      for (let value of numbers)\r\n        if (!isInRow({ grid, row, value }))\r\n          if (!isInCol({ col, grid, value })) {\r\n            const square = identifySquare({ grid, row, col })\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value\r\n              if (checkGrid(grid)) {\r\n                counter++\r\n                console.log({ counter })\r\n                break\r\n              } else if (solveGrid(grid)) return true\r\n            }\r\n          }\r\n\r\n      break\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default solveGrid\r\n","import { AnyAction } from 'redux'\r\n\r\nimport { createFullGrid, normalizeGrid } from 'utils'\r\n\r\nimport * as types from './types'\r\nimport { IReducer } from './interfaces'\r\n\r\nconst initialState: IReducer = { grid: undefined }\r\n\r\nfunction reducer(state = initialState, action: AnyAction): IReducer {\r\n  switch (action.type) {\r\n    case types.CREATE_FULL_GRID:\r\n      return { ...state, grid: normalizeGrid(createFullGrid()) }\r\n\r\n    case types.SELECT_BLOCK:\r\n      return { ...state, selectedBlock: action.coords }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import reducer from './reducer'\r\n\r\nexport * from './actions'\r\nexport * from './interfaces'\r\n\r\nexport type IReducer = ReturnType<typeof reducer>\r\nexport default reducer\r\n","import styled, { css } from 'styled-components'\r\n\r\ninterface IProps {\r\n  active?: boolean\r\n}\r\n\r\nexport const Container = styled.div<IProps>`\r\n  ${({ active, theme }) => css`\r\n    align-items: center;\r\n    background-color: ${active\r\n      ? theme.colors.gridBlockActive\r\n      : theme.colors.gridBlock};\r\n    border: solid 1px ${theme.colors.grid};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    flex-shrink: 0;\r\n    flex-basis: 0;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    height: auto;\r\n    justify-content: center;\r\n    transition: ${theme.transition};\r\n    user-select: none;\r\n\r\n    &:before {\r\n      padding-top: 100%;\r\n      content: '';\r\n      float: left;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.gridBlockHover};\r\n    }\r\n  `}\r\n`\r\n","import React, { FC } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Dispatch, AnyAction } from 'redux'\r\n\r\nimport { IReducer } from 'modules'\r\nimport { N, INDEX } from 'typings'\r\n\r\nimport { Container } from './styles'\r\nimport { selectBlock } from 'modules/grid'\r\n\r\ninterface IProps {\r\n  colIndex: INDEX\r\n  rowIndex: INDEX\r\n}\r\n\r\ninterface IState {\r\n  isActive: boolean\r\n  value: N\r\n}\r\n\r\nconst Block: FC<IProps> = ({ colIndex, rowIndex }) => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ grid: { grid, selectedBlock } }) => ({\r\n      isActive: selectedBlock\r\n        ? selectedBlock[0] === rowIndex && selectedBlock[1] === colIndex\r\n        : false,\r\n      value: grid ? grid[rowIndex][colIndex] : 0,\r\n    })\r\n  )\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\r\n\r\n  function handleClick() {\r\n    if (!state.isActive) dispatch(selectBlock([rowIndex, colIndex]))\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      active={state.isActive}\r\n      data-cy={`block-container-${rowIndex}-${colIndex}`}\r\n      onClick={handleClick}\r\n    >\r\n      {state.value === 0 ? '' : state.value}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Block\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const Row = styled.div`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex-flow: row;\r\n\r\n    &:nth-child(1) {\r\n      div {\r\n        border-top: solid 4px ${theme.colors.grid};\r\n      }\r\n    }\r\n    &:nth-child(3),\r\n    &:nth-child(6) {\r\n      div {\r\n        border-bottom: solid 3px ${theme.colors.grid};\r\n      }\r\n    }\r\n    &:nth-child(9) {\r\n      border-bottom: solid 4px ${theme.colors.grid};\r\n    }\r\n\r\n    div {\r\n      &:nth-child(1) {\r\n        border-left: solid 4px ${theme.colors.grid};\r\n      }\r\n      &:nth-child(3),\r\n      &:nth-child(6),\r\n      &:nth-child(9) {\r\n        border-right: solid 4px ${theme.colors.grid};\r\n      }\r\n      &:nth-child(4),\r\n      &:nth-child(7) {\r\n        border-left: none;\r\n      }\r\n    }\r\n  `}\r\n`\r\n","import React, { Children, FC, useCallback, useEffect } from 'react'\r\nimport useMousetrap from 'react-hook-mousetrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Action, Dispatch } from 'redux'\r\n\r\nimport { IReducer } from 'modules'\r\nimport { createFullGrid, selectBlock } from 'modules/grid'\r\nimport { INDEX, BLOCK_COORDS } from 'typings'\r\n\r\nimport Block from './block'\r\nimport { Container, Row } from './styles'\r\n\r\ninterface IState {\r\n  selectedBlock?: BLOCK_COORDS\r\n}\r\n\r\nconst Grid: FC = () => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ grid: { selectedBlock } }) => ({ selectedBlock })\r\n  )\r\n  const dispatch = useDispatch<Dispatch<Action>>()\r\n\r\n  const create = useCallback(() => dispatch(createFullGrid()), [dispatch])\r\n\r\n  function moveDown() {\r\n    if (state.selectedBlock && state.selectedBlock[0] < 8)\r\n      dispatch(\r\n        selectBlock([\r\n          (state.selectedBlock[0] + 1) as INDEX,\r\n          state.selectedBlock[1],\r\n        ])\r\n      )\r\n  }\r\n\r\n  function moveLeft() {\r\n    if (state.selectedBlock && state.selectedBlock[1] > 0)\r\n      dispatch(\r\n        selectBlock([\r\n          state.selectedBlock[0],\r\n          (state.selectedBlock[1] - 1) as INDEX,\r\n        ])\r\n      )\r\n  }\r\n\r\n  function moveRight() {\r\n    if (state.selectedBlock && state.selectedBlock[1] < 8)\r\n      dispatch(\r\n        selectBlock([\r\n          state.selectedBlock[0],\r\n          (state.selectedBlock[1] + 1) as INDEX,\r\n        ])\r\n      )\r\n  }\r\n\r\n  function moveUp() {\r\n    if (state.selectedBlock && state.selectedBlock[0] > 0)\r\n      dispatch(\r\n        selectBlock([\r\n          (state.selectedBlock[0] - 1) as INDEX,\r\n          state.selectedBlock[1],\r\n        ])\r\n      )\r\n  }\r\n\r\n  useMousetrap('down', moveDown)\r\n  useMousetrap('left', moveLeft)\r\n  useMousetrap('right', moveRight)\r\n  useMousetrap('up', moveUp)\r\n\r\n  useEffect(() => {\r\n    create()\r\n  }, [create])\r\n\r\n  return (\r\n    <Container data-cy=\"grid-container\">\r\n      {Children.toArray(\r\n        [...Array(9)].map((_, rowIndex) => (\r\n          <Row data-cy=\"grid-row-container\">\r\n            {Children.toArray(\r\n              [...Array(9)].map((_, colIndex) => (\r\n                <Block\r\n                  colIndex={colIndex as INDEX}\r\n                  rowIndex={rowIndex as INDEX}\r\n                />\r\n              ))\r\n            )}\r\n          </Row>\r\n        ))\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Card = styled.div`\r\n  ${({ theme }) => css`\r\n    background-color: ${theme.colors.card};\r\n    border-radius: 15px;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    max-height: fit-content;\r\n    padding: 15px;\r\n  `}\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  max-width: 500px;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Title = styled.h1`\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.card};\r\n    text-align: center;\r\n    margin-top: 0;\r\n  `}\r\n`\r\n","import { combineReducers } from 'redux'\r\n\r\nimport grid from './grid'\r\n\r\nconst reducer = combineReducers({ grid })\r\n\r\nexport type IReducer = ReturnType<typeof reducer>\r\nexport default reducer\r\n","import { createStore } from 'redux'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nimport reducer from 'modules'\r\n\r\nfunction configureStore(initialState = {}) {\r\n  return createStore(reducer, initialState, devToolsEnhancer({}))\r\n}\r\n\r\nexport default configureStore\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) return\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        navigator.serviceWorker.ready.then(() =>\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        )\r\n      } else registerValidSW(swUrl, config)\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) return\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              if (config && config.onUpdate) config.onUpdate(registration)\r\n            } else {\r\n              console.log('Content is cached for offline use.')\r\n\r\n              if (config && config.onSuccess) config.onSuccess(registration)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error =>\r\n      console.error('Error during service worker registration:', error)\r\n    )\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      )\r\n        navigator.serviceWorker.ready.then(registration =>\r\n          registration.unregister().then(() => window.location.reload())\r\n        )\r\n      else registerValidSW(swUrl, config)\r\n    })\r\n    .catch(() =>\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    )\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator)\r\n    navigator.serviceWorker.ready.then(registration =>\r\n      registration.unregister()\r\n    )\r\n}\r\n","import { createGlobalStyle, css } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  ${({ theme }) => css`\r\n    html {\r\n      height: 100%;\r\n\r\n      body {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        margin: 0;\r\n\r\n        #root {\r\n          background: ${theme.colors.background};\r\n          color: ${theme.colors.font};\r\n          display: flex;\r\n          font-family: sans-serif;\r\n          height: 100%;\r\n          justify-content: center;\r\n          padding: 15px;\r\n        }\r\n      }\r\n    }\r\n  `}\r\n`\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nimport { Card, Content, Grid, Title } from 'components'\r\nimport { configureStore, unregister } from 'core'\r\nimport { GlobalStyles, theme } from 'styles'\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <GlobalStyles />\r\n    <Provider store={store}>\r\n      <Content data-cy=\"content\">\r\n        <Title data-cy=\"title\">Sudoku</Title>\r\n        <Card data-cy=\"card\">\r\n          <Grid />\r\n        </Card>\r\n      </Content>\r\n    </Provider>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nunregister()\r\n","export default {\r\n  colors: {\r\n    background: 'radial-gradient(#282c34CC, #282C34)',\r\n    card: 'white',\r\n    grid: '#282C34',\r\n    gridBlock: 'white',\r\n    gridBlockActive: '#61dafb99',\r\n    gridBlockHover: '#61dafb55',\r\n    font: '#282C34',\r\n  },\r\n  transition: '0.3s',\r\n}\r\n"],"sourceRoot":""}