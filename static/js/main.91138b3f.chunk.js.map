{"version":3,"sources":["utils/check-grid/index.ts","utils/create-full-grid/index.ts","utils/fill-grid/index.ts","utils/identify-square/index.ts","utils/is-in/col/index.ts","utils/is-in/row/index.ts","utils/is-in/square/index.ts","utils/shuffle/index.ts","utils/solve-grid/index.ts","components/grid/block/styles/index.ts","components/grid/block/index.tsx","components/grid/styles/index.ts","components/grid/index.tsx","components/styles/card/index.ts","components/styles/content/index.ts","components/styles/title/index.ts","modules/grid/reducer.ts","modules/grid/index.ts","modules/index.ts","core/configure-store/index.ts","core/service-worker/index.ts","styles/global.ts","index.tsx","styles/theme.ts"],"names":["checkGrid","grid","i","j","createFullGrid","fillGrid","numbers","row","col","Math","floor","shuffle","value","isInRow","isInCol","square","identifySquare","isInSquare","identifyWorkingSquare","x","push","includes","array","length","random","solveGrid","Container","styled","div","theme","css","colors","transition","gridBlockHover","Block","data-cy","Row","Grid","console","log","Array","map","rowElement","rowIndex","colElement","colIndex","Card","card","Content","Title","h1","initialState","reducer","state","type","combineReducers","configureStore","createStore","Boolean","window","location","hostname","match","createGlobalStyle","background","font","store","ReactDOM","render","gridBlockActive","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91138b3f.chunk.js","sourcesContent":["import { GRID } from '../../typings'\r\n\r\n/**\r\n * A function to check if the grid is full\r\n * @param grid A 9X9 array consisting of values from 0-9\r\n */\r\nfunction checkGrid(grid: GRID): boolean {\r\n  for (let i = 0; i < 9; i++)\r\n    for (let j = 0; j < 9; j++) if (grid[i][j] === 0) return false\r\n\r\n  return true\r\n}\r\n\r\nexport default checkGrid\r\n","import { GRID } from '../../typings'\r\nimport { fillGrid } from '..'\r\n\r\nfunction createFullGrid(): GRID {\r\n  const grid: GRID = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ]\r\n\r\n  fillGrid(grid)\r\n\r\n  return grid\r\n}\r\n\r\nexport default createFullGrid\r\n","import { GRID, NUMBERS } from 'typings'\r\nimport {\r\n  checkGrid,\r\n  identifySquare,\r\n  shuffle,\r\n  isInCol,\r\n  isInRow,\r\n  isInSquare,\r\n} from 'utils'\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\n/**\r\n * A backtracking/recusrive function to check all possible combinations of numbers until a solution is found\r\n * @param grid 9X9 Sudoku Grid\r\n */\r\nfunction fillGrid(grid: GRID) {\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      shuffle(numbers)\r\n\r\n      for (let value of numbers) {\r\n        if (!isInRow({ grid, row, value }))\r\n          if (!isInCol({ col, grid, value })) {\r\n            const square = identifySquare({ grid, row, col })\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value\r\n              if (checkGrid(grid)) return true\r\n              else if (fillGrid(grid)) return true\r\n            }\r\n          }\r\n      }\r\n\r\n      break\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default fillGrid\r\n","import { GRID, SQUARE } from 'typings'\r\n\r\ninterface IInput {\r\n  grid: GRID\r\n  row: number\r\n  col: number\r\n}\r\n\r\n/**\r\n * A function that identifies and returns the current square of a given sudoku grid at a row and column index.\r\n * @param input Object with 9X9 Sudoku Grid, row index and col index.\r\n */\r\nfunction identifyWorkingSquare({ col, grid, row }: IInput): SQUARE {\r\n  const square = []\r\n  if (row < 3) {\r\n    if (col < 3)\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  } else if (row < 6) {\r\n    if (col < 3)\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  } else {\r\n    if (col < 3)\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  }\r\n\r\n  return square as SQUARE\r\n}\r\n\r\nexport default identifyWorkingSquare\r\n","import { GRID, NUMBERS } from 'typings'\r\n\r\ninterface IInput {\r\n  col: number\r\n  grid: GRID\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid column.\r\n * @param input Object with 9X9 Sudoku Grid, col index and value.\r\n */\r\nfunction isInCol({ col, grid, value }: IInput): boolean {\r\n  for (let i = 0; i < 9; i++) if (value === grid[i][col]) return true\r\n  return false\r\n}\r\n\r\nexport default isInCol\r\n","import { GRID, NUMBERS } from 'typings'\r\n\r\ninterface IInput {\r\n  grid: GRID\r\n  row: number\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid row.\r\n * @param input Object with 9X9 Sudoku Grid, row index and value.\r\n */\r\nfunction isInRow({ grid, row, value }: IInput): boolean {\r\n  return grid[row].includes(value)\r\n}\r\n\r\nexport default isInRow\r\n","import { NUMBERS, SQUARE } from 'typings'\r\n\r\ninterface IInput {\r\n  square: SQUARE\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid square.\r\n * @param input Object with 3X3 Square and value.\r\n */\r\nfunction isInSquare({ square, value }: IInput): boolean {\r\n  return [...square[0], ...square[1], ...square[2]].includes(value)\r\n}\r\n\r\nexport default isInSquare\r\n","/**\r\n * An array shuffling function using the Fisher-Yates shuffle algorithm\r\n * @param array An array that you want shuffled\r\n */\r\nfunction shuffle(array: any[]) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1))\r\n    ;[array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n}\r\n\r\nexport default shuffle\r\n","import { GRID, NUMBERS } from 'typings'\r\nimport { checkGrid, identifySquare, isInCol, isInRow, isInSquare } from 'utils'\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\n/**\r\n * A backtracking/recusrive function to check all possible combinations of numbers until a solution is found\r\n * @param grid A 9X9 array consisting of values from 0-9\r\n */\r\nfunction solveGrid(grid: GRID) {\r\n  let counter = 0\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      for (let value of numbers)\r\n        if (!isInRow({ grid, row, value }))\r\n          if (!isInCol({ col, grid, value })) {\r\n            const square = identifySquare({ grid, row, col })\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value\r\n              if (checkGrid(grid)) {\r\n                counter++\r\n                console.log({ counter })\r\n                break\r\n              } else if (solveGrid(grid)) return true\r\n            }\r\n          }\r\n\r\n      break\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default solveGrid\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  ${({ theme }) => css`\r\n    align-items: center;\r\n    border: solid 1px ${theme.colors.grid};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    flex-shrink: 0;\r\n    flex-basis: 0;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    height: auto;\r\n    justify-content: center;\r\n    transition: ${theme.transition};\r\n\r\n    &:before {\r\n      padding-top: 100%;\r\n      content: '';\r\n      float: left;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.gridBlockHover};\r\n    }\r\n  `}\r\n`\r\n","import React, { FC } from 'react'\r\n\r\nimport { Container } from './styles'\r\n\r\nconst Block: FC = () => <Container data-cy=\"block-container\">X</Container>\r\n\r\nexport default Block\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const Row = styled.div`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex-flow: row;\r\n\r\n    &:nth-child(1) {\r\n      div {\r\n        border-top: solid 4px ${theme.colors.grid};\r\n      }\r\n    }\r\n    &:nth-child(3),\r\n    &:nth-child(6) {\r\n      div {\r\n        border-bottom: solid 3px ${theme.colors.grid};\r\n      }\r\n    }\r\n    &:nth-child(9) {\r\n      border-bottom: solid 4px ${theme.colors.grid};\r\n    }\r\n\r\n    div {\r\n      &:nth-child(1) {\r\n        border-left: solid 4px ${theme.colors.grid};\r\n      }\r\n      &:nth-child(3),\r\n      &:nth-child(6),\r\n      &:nth-child(9) {\r\n        border-right: solid 4px ${theme.colors.grid};\r\n      }\r\n      &:nth-child(4),\r\n      &:nth-child(7) {\r\n        border-left: none;\r\n      }\r\n    }\r\n  `}\r\n`\r\n","import React, { FC } from 'react'\r\n\r\nimport { createFullGrid } from 'utils'\r\n\r\nimport Block from './block'\r\nimport { Container, Row } from './styles'\r\n\r\nconst Grid: FC = () => {\r\n  const grid = createFullGrid()\r\n  console.log({ grid })\r\n\r\n  return (\r\n    <Container data-cy=\"grid-container\">\r\n      {[...Array(9)].map((rowElement, rowIndex) => (\r\n        <Row data-cy=\"grid-row-container\">\r\n          {[...Array(9)].map((colElement, colIndex) => (\r\n            <Block />\r\n          ))}\r\n        </Row>\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Card = styled.div`\r\n  ${({ theme }) => css`\r\n    background-color: ${theme.colors.card};\r\n    border-radius: 15px;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    max-height: fit-content;\r\n    padding: 15px;\r\n  `}\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  max-width: 500px;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Title = styled.h1`\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.card};\r\n    text-align: center;\r\n    margin-top: 0;\r\n  `}\r\n`\r\n","import { AnyAction } from 'redux'\r\n\r\nconst initialState = {}\r\n\r\nfunction reducer(state = initialState, action: AnyAction) {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import reducer from './reducer'\r\n\r\nexport default reducer\r\n","import { combineReducers } from 'redux'\r\n\r\nimport grid from './grid'\r\n\r\nconst reducer = combineReducers({ grid })\r\n\r\nexport default reducer\r\n","import { createStore } from 'redux'\r\n\r\nimport reducer from 'modules'\r\n\r\nfunction configureStore(initialState = {}) {\r\n  return createStore(reducer, initialState)\r\n}\r\n\r\nexport default configureStore\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) return\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        navigator.serviceWorker.ready.then(() =>\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        )\r\n      } else registerValidSW(swUrl, config)\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) return\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              if (config && config.onUpdate) config.onUpdate(registration)\r\n            } else {\r\n              console.log('Content is cached for offline use.')\r\n\r\n              if (config && config.onSuccess) config.onSuccess(registration)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error =>\r\n      console.error('Error during service worker registration:', error)\r\n    )\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      )\r\n        navigator.serviceWorker.ready.then(registration =>\r\n          registration.unregister().then(() => window.location.reload())\r\n        )\r\n      else registerValidSW(swUrl, config)\r\n    })\r\n    .catch(() =>\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    )\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator)\r\n    navigator.serviceWorker.ready.then(registration =>\r\n      registration.unregister()\r\n    )\r\n}\r\n","import { createGlobalStyle, css } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  ${({ theme }) => css`\r\n    html {\r\n      height: 100%;\r\n\r\n      body {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        margin: 0;\r\n\r\n        #root {\r\n          background: ${theme.colors.background};\r\n          color: ${theme.colors.font};\r\n          display: flex;\r\n          font-family: sans-serif;\r\n          height: 100%;\r\n          justify-content: center;\r\n          padding: 15px;\r\n        }\r\n      }\r\n    }\r\n  `}\r\n`\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nimport { Card, Content, Grid, Title } from 'components'\r\nimport { configureStore, unregister } from 'core'\r\nimport { GlobalStyles, theme } from 'styles'\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <GlobalStyles />\r\n    <Provider store={store}>\r\n      <Content data-cy=\"content\">\r\n        <Title data-cy=\"title\">Sudoku</Title>\r\n        <Card data-cy=\"card\">\r\n          <Grid />\r\n        </Card>\r\n      </Content>\r\n    </Provider>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nunregister()\r\n","export default {\r\n  colors: {\r\n    background: 'radial-gradient(#282c34CC, #282C34)',\r\n    card: 'white',\r\n    grid: '#282C34',\r\n    gridBlockActive: '#61dafb99',\r\n    gridBlockHover: '#61dafb55',\r\n    font: '#282C34',\r\n  },\r\n  transition: '0.3s',\r\n}\r\n"],"sourceRoot":""}